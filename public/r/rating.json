{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "rating",
  "type": "registry:component",
  "title": "Rating",
  "description": "A customizable rating component",
  "files": [
    {
      "path": "registry/new-york/rating/components/rating.tsx",
      "content": "\"use client\";\nimport { Star } from \"lucide-react\";\nimport { useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport type RatingProps = {\n  value?: number;\n  /**\n   * The maximum value of the rating\n   *\n   * @default 5\n   */\n  max?: number;\n  hasHalves?: boolean;\n  className?: string;\n  onChange?: (value: number) => void;\n};\n\nexport function Rating({\n  max = 5,\n  hasHalves,\n  value,\n  className,\n  onChange,\n}: RatingProps) {\n  const [hoverValue, setHoverValue] = useState<number>(value ?? 0);\n  const roundedStars = Math.ceil(max);\n\n  const handleClick = (value: number) => {\n    onChange?.(value);\n  };\n\n  return (\n    <div\n      className={cn(\n        \"flex flex-nowrap\",\n        \"[&_[data-slot='star']]:text-primary [&_[data-slot='star']]:cursor-pointer [&_[data-slot='star']]:px-0.5\",\n        \"[&_svg]:size-6\",\n        className,\n      )}\n    >\n      {Array.from({ length: roundedStars }).map((_, index) => {\n        const starValue = index + 1;\n\n        return (\n          <div key={starValue} className=\"relative\">\n            {hasHalves && (\n              <button\n                data-slot=\"star\"\n                type=\"button\"\n                className=\"absolute z-10\"\n                style={{ clipPath: \"inset(0 50% 0 0)\" }}\n                onClick={() => handleClick(starValue - 0.5)}\n                onMouseEnter={() => setHoverValue(starValue - 0.5)}\n                onMouseLeave={() => setHoverValue(value ?? 0)}\n              >\n                <Star\n                  className={cn(\"stroke-current transition-colors\", {\n                    \"fill-current\": hoverValue >= starValue - 0.5,\n                  })}\n                />\n              </button>\n            )}\n            <button\n              data-slot=\"star\"\n              type=\"button\"\n              onClick={() => handleClick(starValue)}\n              onMouseEnter={() => setHoverValue(starValue)}\n              onMouseLeave={() => setHoverValue(value ?? 0)}\n            >\n              <Star\n                className={cn(\"stroke-current transition-colors\", {\n                  \"fill-current\": hoverValue >= starValue,\n                })}\n              />\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}